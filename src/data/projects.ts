import { TAGS } from './tags'

export const PROJECTS = {
  'es': [
    {
      id: 'interstellar-code',
      title: 'Interstellar Code - Blog de desarrollo de software',
      description: 'Interstellar Code es un blog de desarrollo de software, en donde los desarrolladores pueden descubrir increíbles trucos, consejos y documentaciones para mejorar sus habilidades de programación.',
      link: 'https://interstellar-code.netlify.app/',
      image: '/projects/interstellar-code.webp',
      github: 'https://github.com/chicho69-cesar/interstellar-code',
      tags: [TAGS.ASTRO, TAGS.TAILWIND, TAGS.TYPESCRIPT],
      images: [
        '/projects/interstellar-code/1.webp',
        '/projects/interstellar-code/2.webp',
        '/projects/interstellar-code/3.webp',
        '/projects/interstellar-code/4.webp',
        '/projects/interstellar-code/5.webp',
      ],
      multiple_repos: [],
      full_description: 'Interstellar Code es un blog de desarrollo de software que creé para compartir mis conocimientos sobre programación y desarrollo de software. Este blog está construido con el framework web Astro, utilice este framework por su increíble simplicidad y experiencia de desarrollo, por la parte de los estilos utilicé Tailwind CSS para avanzar rápidamente en el diseño y la maquetación del sitio web. El desarrollo de este blog me permitió aprender mucho sobre Astro ya que hice uso de muchas de sus características, como la generación de rutas dinámicas, el uso de componentes y la integración con Markdown para los artículos. Además, implementé secciones de categorías, paginación y enrutamiento dinámico. También utilicé TypeScript para asegurarme de que el código fuera más robusto y fácil de mantener. En general, este proyecto me ayudó a profundizar en mis habilidades de desarrollo web y a crear un sitio que espero sea útil para otros desarrolladores. <br/>Personalmente me encanto el proceso de desarrollo de este blog ya que me permitió explorar nuevas tecnologías y mejorar mis habilidades de programación, además de que me permite compartir mis conocimientos con personas que están interesadas en aprender más sobre desarrollo de software.',
    },
    {
      id: 'expense-tracker',
      title: 'ExpenseTracker - Aplicación web para controlar tus gastos',
      description: 'Aplicación web para controlar tus gastos, donde puedes agregar, eliminar y editar tus gastos, además de ver el total de tus gastos, filtrarlos por categorías, y observar el balance de tus ingresos y egresos.',
      link: 'https://react-apps-221cd.web.app/',
      image: '/projects/expense-tracker.webp',
      github: 'https://github.com/chicho69-cesar/expense-tracker',
      tags: [TAGS.REACT, TAGS.JAVASCRIPT, TAGS.TAILWIND, TAGS.FIREBASE],
      images: [
        '/projects/expense-tracker/1.webp',
        '/projects/expense-tracker/2.webp',
        '/projects/expense-tracker/3.webp',
        '/projects/expense-tracker/4.webp',
        '/projects/expense-tracker/5.webp',
      ],
      multiple_repos: [],
      full_description: 'Expense Tracker es una aplicación que desarrolle para mi uso personal, ya que me ayuda mucho a llevar el control de los gastos que tengo, además de que me permite ver en detalle como es que gasto mi dinero, y así poder ahorrar más. <br/>Esta aplicación está construida con React y JavaScript, utilicé React porque es la librería de Front-End que más me gusta y con la que más experiencia desarrollando tengo, me encanta su forma de trabajar basada en componentes, hooks y la enorme cantidad de herramientas y librerías que existen para mejorar la experiencia de desarrollo. Para el almacenamiento de la información utilicé Firebase, ya que es una herramienta muy completa y fácil de usar, además de que me permite escalar la aplicación sin problemas, también hice uso de Firebase para la autenticación de usuarios, lo que me permite tener un control de los gastos por usuario. Para el diseño emplee Tailwind CSS, ya que es una herramienta que me encanta y me permite crear diseños de manera rápida y sencilla. <br/>Esta aplicación me encanta no solo porque la construí yo mismo, sino que me es sumamente útil en mi día a día para controlar mis finanzas personales.',
    },
    {
      id: 'ink-chat',
      title: 'INK Chat - Aplicación de chat en tiempo real',
      description: 'Ink Chat es una aplicación de chat en tiempo real, donde los usuarios pueden mandar mensajes a otras personas, ver sus mensajes, mantener un historial de mensajes, y ver los usuarios que están en línea.',
      link: 'https://github.com/chicho69-cesar/ink-chat',
      image: '/projects/ink-chat.webp',
      github: 'https://github.com/chicho69-cesar/ink-chat',
      tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.TYPESCRIPT, TAGS.EXPRESS, TAGS.NODEJS, TAGS.POSTGRESQL],
      images: [
        '/projects/ink-chat/1.webp',
        '/projects/ink-chat/2.webp',
        '/projects/ink-chat/3.webp',
        '/projects/ink-chat/4.webp',
        '/projects/ink-chat/5.webp',
      ],
      multiple_repos: [],
      full_description: 'Ink Chat es una aplicación de chat en tiempo real, la cual la cree utilizando un Stack de tecnologías, que incluyen a React como librería de Front-End, Express y NodeJS para crear el Back-End del proyecto, y PostgreSQL como base de datos para almacenar los mensajes y la información de los usuarios, además de que tanto para el Front-End como para el Back-End utilice el lenguaje de programación TypeScript, lo que me permite tener un tipado de datos más fuerte y asi evitar errores desde la etapa de desarrollo. <br/>Lo más importante de la aplicación es las librerías y herramientas que utilice para construirla, en el Front-End hice uso de la librería de UI Shadcn, la cual es una librería de componentes UI sumamente popular y utilizada para crear sitios web modernos y atractivos, para la comunicación en tiempo real utilice Socket.IO, una librería que permite la comunicación en tiempo real entre el cliente y el servidor usando WebSockets. <br/>En el Back-End utilice Express, un framework de Node.js que facilita la creación de aplicaciones web y APIs, y PostgreSQL como base de datos relacional para almacenar los mensajes y la información de los usuarios. <br/>Me encanto el proceso de desarrollo de esta aplicación, ya que me ayudo a aprender mucho sobre el uso de tecnologías como los WebSockets para la comunicación en tiempo real, y sus aplicaciones comunes en las aplicaciones web.',
    },
  ],
  'en': [
    {
      id: 'interstellar-code',
      title: 'Interstellar Code - Software Development Blog',
      description: 'Interstellar Code is a software development blog where developers can discover amazing tricks, tips, and documentation to enhance their programming skills.',
      link: 'https://interstellar-code.netlify.app/',
      image: '/projects/interstellar-code.webp',
      github: 'https://github.com/chicho69-cesar/interstellar-code',
      tags: [TAGS.ASTRO, TAGS.TAILWIND, TAGS.TYPESCRIPT],
      images: [
        '/projects/interstellar-code/1.webp',
        '/projects/interstellar-code/2.webp',
        '/projects/interstellar-code/3.webp',
        '/projects/interstellar-code/4.webp',
        '/projects/interstellar-code/5.webp',
      ],
      multiple_repos: [],
      full_description: 'Interstellar Code is a software development blog that I created to share my knowledge about programming and software development. This blog is built with the Astro web framework, which I chose for its incredible simplicity and development experience. For styling, I used Tailwind CSS to quickly advance the design and layout of the website. The development of this blog allowed me to learn a lot about Astro, as I utilized many of its features, such as dynamic route generation, component usage, and Markdown integration for articles. Additionally, I implemented sections for categories, pagination, and dynamic routing. I also used TypeScript to ensure that the code was more robust and maintainable. Overall, this project helped me deepen my web development skills and create a site that I hope will be useful for other developers. <br/>Personally, I loved the development process of this blog as it allowed me to explore new technologies and improve my programming skills while sharing my knowledge with those interested in learning more about software development.',
    },
    {
      id: 'expense-tracker',
      title: 'ExpenseTracker - Web application to track your expenses',
      description: 'Web application to control your expenses, where you can add, delete and edit your expenses, as well as see the total of your expenses, filter them by categories, and see the balance of your income and expenses.',
      link: 'https://react-apps-221cd.web.app/',
      image: '/projects/expense-tracker.webp',
      github: 'https://github.com/chicho69-cesar/expense-tracker',
      tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.FIREBASE],
      images: [
        '/projects/expense-tracker/1.webp',
        '/projects/expense-tracker/2.webp',
        '/projects/expense-tracker/3.webp',
        '/projects/expense-tracker/4.webp',
        '/projects/expense-tracker/5.webp',
      ],
      multiple_repos: [],
      full_description: 'Expense Tracker is an application I developed for personal use, as it helps me keep track of my expenses, allowing me to see in detail how I spend my money and save more. <br/>This application is built with React and JavaScript, which I chose because it is my favorite front-end library and the one I have the most experience with. I love its component-based architecture, hooks, and the vast array of tools and libraries available to enhance the development experience. For data storage, I used Firebase, as it is a comprehensive and easy-to-use tool that allows me to scale the application without issues. I also utilized Firebase for user authentication, enabling expense tracking per user. For design, I employed Tailwind CSS, a tool I adore for its ability to create designs quickly and easily. <br/>I love this application not only because I built it myself but also because it is extremely useful in my daily life for managing my personal finances.',
    },
    {
      id: 'ink-chat',
      title: 'INK Chat - Real-time Chat Application',
      description: 'Ink Chat is a real-time chat application where users can send messages to others, view their messages, maintain a message history, and see which users are online.',
      link: 'https://github.com/chicho69-cesar/ink-chat',
      image: '/projects/ink-chat.webp',
      github: 'https://github.com/chicho69-cesar/ink-chat',
      tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.TYPESCRIPT, TAGS.EXPRESS, TAGS.NODEJS, TAGS.POSTGRESQL],
      images: [
        '/projects/ink-chat/1.webp',
        '/projects/ink-chat/2.webp',
        '/projects/ink-chat/3.webp',
        '/projects/ink-chat/4.webp',
        '/projects/ink-chat/5.webp',
      ],
      multiple_repos: [],
      full_description: 'Ink Chat is a real-time chat application that I created using a technology stack that includes React for the front-end, Express and Node.js for the back-end, and PostgreSQL as the database to store messages and user information. I also used TypeScript for both the front-end and back-end, which allows for stronger data typing and helps avoid errors during development. <br/>The most important aspects of the application are the libraries and tools I used to build it. On the front-end, I utilized Shadcn UI, a popular UI component library used to create modern and attractive websites. For real-time communication, I employed Socket.IO, a library that enables real-time communication between the client and server using WebSockets. <br/>On the back-end, I used Express, a Node.js framework that simplifies the creation of web applications and APIs, and PostgreSQL as a relational database to store messages and user information. <br/>I loved the development process of this application as it helped me learn a lot about using technologies like WebSockets for real-time communication and their common applications in web applications.',
    },
  ]
}
